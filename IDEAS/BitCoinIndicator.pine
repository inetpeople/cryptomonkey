//@version=4
var persistent_bull = nz(persistent_bull[1],0) 
var persistent_bear  = nz(persistent_bear[1],0) 

// Updated Version: 5.4.0

// Authors: Joy Bangla
// Twitter: https://twitter.com/Joy_Bangla_1979
// Source code located at https://bitbucket.org/long_live_prosper/indicators
// Bug tracking done through: https://bitbucket.org/long_live_prosper/indicators/issues?status=new&sort=-priority
// Contact author at : long_live_prosper.bitcoin@outlook.com
// Telegram Channel: https://t.me/JoyBanglaTA
// Source code adapted from codes by Lazy Bear, Glax and other codes found by Googling

// I have several costs involved in maintaining this indicator. 
// So, if this indicator helps you in making better decision, all I ask is you open a new bitmex or by bybit account using my ref links from below
// Bitmex Ref link: https://www.bitmex.com/register/7A9Vd3 
// Bybit Ref Link: https://www.bybit.com/app/register?ref=Z046Q
// or send me any amount of tip to 3BMEXPhCHD1QgBGiDmLAWnoyfrr1jwKnQo



study(title="The Bitcoin Buy/Sell Indicator", shorttitle="JB", overlay=true)
// ****************************************Inputs***************************************************************
buySellSignal = input(true, "Show the buy sell signals?")
cogRegionFillTransp = input(false, "Display COG & ATR Starc+/- that some use as dynamic S/R and median line?")
showFibCOG=input(false, "Display dynamic support and resistance as lines on the chart based on Fib COG?")
inputIndividualSiganlPlot = true
sp = input (false, "Display Parabolic SAR?")
spLines = input (false, "Display Parabolic SAR marks on the chart?")
sCloud = input(false, "Display the Tenkan and Kijun lines of Ichimoku lines on the chart?")
sL = input (false, "Display Leledec Exhausion - Leledc on the chart?")
sTD = false
sRMO = input(false, "Display Rahul Mohindar Oscillator - RMO on the chart?")
inputAma = input(false, title="Display Kaufman AMA wave - AMA on the chart?")
tm = input (false, "Display Trend Magic signals on the chart?")
wtoLB = input (false, "Display WaveTrend Oscillator - WTO on the chart?")
vfiLB = input (false, "Display Volume Flow Indicator - VFI on the chart?")

inputNeutralMinorSignals = input (false, title="Display the minor or the not so strong signals from Ichimoku")
maj=true
min=input(false,title="Display Minor Leledc Exhausion Bar signal")

tenkanPeriods = input(20, minval=9, title="Tenkan Period - Ichimoku [9 or 10 or 20]")
kijunPeriods = input(60, minval=26, title="Kijun Period - Ichimoku [26 or 30 or 60]")
chikouPeriods = input(120, minval=52, title="Chikou - Ichimoku [52 or 60 or 120]")
displacement = input(30, minval=26, title="Displacement - Ichimoku [26 or 30]")

// ****************************************General Color Variables***************************************************************
colorLime = #006400 // Warning sign for long trade
colorBuy= #2DFF03 // Good sign for long trade
colorSell = #733629 // Good sign for short trade
colorMaroon =#8b0000 // Warning sign for short trade
colorBlue =#0000ff // No clear sign
colorGray = #a9a9a9 // Gray Color (For Squeeze momentum indicator)
colorBlack = #000000 // Black
colorWhite = #ffffff // White
colorTenkanViolet = #800000 // Tenkan-sen line color
colorKijun = #0000A6 // Kijun-sen line color

// TD Sequential bar colors
tdSell = #ff6666
tdSellOvershoot = #ff1a1a
tdSellOvershoot1 = #cc0000
tdSellOverShoot2 = #990000
tdSellOverShoot3 = #732626

tdBuy = #80ff80
tdBuyOverShoot = #33ff33
tdBuyOvershoot1 = #00cc00
tdBuyOverShoot2 = #008000 
tdBuyOvershoot3 = #004d00
    
// ****************************************Icons***************************************************************
upSign = '↑' // indicates the indicator shows uptrend
downSign = '↓' // incicates the indicator showing downtrend
exitSign ='x' //indicates the indicator uptrend/downtrend ending
// diamond signals weakBullishSignal or weakBearishsignal
// flag signals neutralBullishSignal or neutralBearishSignal

// ****************************************Parabolic SAR code***************************************************************
start = 2 
increment = 2
maximum = 2 
sus = true
sds = true
disc = false 

startCalc = start * .01
incrementCalc = increment * .01
maximumCalc = maximum * .10

sarUp = sar(startCalc, incrementCalc, maximumCalc)
sarDown = sar(startCalc, incrementCalc, maximumCalc)

colUp = spLines and close >= sarDown ? colorLime : na
colDown = spLines and close <= sarUp ? colorSell : na

//@fixme Does not display the correct values for up and down pSAR
plot(sp and sus and sarUp ? sarUp : na, title="↓ SAR", style=cross, linewidth=3,color=colUp)
plot(sp and sds and sarDown ? sarDown : na, title="↑ SAR", style=circles, linewidth=3,color=colDown)

startSAR = 0.02 
incrementSAR = 0.02 
maximumSAR = 0.2 

psar = sar(startSAR, incrementSAR, maximumSAR)
bullishPSAR = psar < high and psar[1] > low
bearishPSAR= psar > low and psar[1] < high 

//***********************Leledc Exhausion Bar***********************************************
maj_qual=6
maj_len=30
min_qual=5
min_len=5

lele(qual,len)=>
    bindex=nz(bindex[1],0)
    sindex=nz(sindex[1],0)
    ret=0
    if (close>close[4]) 
        bindex:=bindex + 1
    if(close<close[4]) 
        sindex:=sindex + 1
    if (bindex>qual) and (close<open) and high>=highest(high,len) 
        bindex:=0
        ret:=-1
    if ((sindex>qual) and (close>open) and (low<= lowest(low,len)))
        sindex:=0
        ret:=1
    return=ret

major=lele(maj_qual,maj_len)
minor=lele(min_qual,min_len)

leledecMajorBullish = maj ? (major==1?low:na) : na
leledecMajorBearish = maj ? (major==-1?high:na) : na

//****************Ichimoku ************************************
donchian(len) => avg(lowest(len), highest(len))

tenkan = donchian(tenkanPeriods)
kijun = donchian(kijunPeriods)
senkouA = avg(tenkan, kijun)
senkouB = donchian(chikouPeriods)
displacedSenkouA = senkouA[displacement]
displacedSenkouB = senkouB[displacement] 

bullishSignal = crossover(tenkan, kijun)
bearishSignal = crossunder(tenkan, kijun)

bullishSignalValues = iff(bullishSignal, tenkan, na)
bearishSignalValues = iff(bearishSignal, tenkan, na)

strongBullishSignal = crossover(tenkan, kijun) and bullishSignalValues > displacedSenkouA and bullishSignalValues > displacedSenkouB and low > tenkan and displacedSenkouA > displacedSenkouB
strongBearishSignal = bearishSignalValues < displacedSenkouA and bearishSignalValues < displacedSenkouB and high < tenkan and displacedSenkouA <  displacedSenkouB

neutralBullishSignal = (bullishSignalValues > displacedSenkouA and bullishSignalValues < displacedSenkouB) or (bullishSignalValues < displacedSenkouA and bullishSignalValues > displacedSenkouB)
weakBullishSignal = bullishSignalValues < displacedSenkouA and bullishSignalValues < displacedSenkouB
neutralBearishSignal = (bearishSignalValues > displacedSenkouA and bearishSignalValues < displacedSenkouB) or (bearishSignalValues < displacedSenkouA and bearishSignalValues > displacedSenkouB)
weakBearishSignal = bearishSignalValues > displacedSenkouA and bearishSignalValues > displacedSenkouB

//*********************Kaufman AMA wave*********************//
src=close
lengthAMA=20
filterp = 10

d=abs(src-src[1])
s=abs(src-src[lengthAMA])
noise=sum(d, lengthAMA)
efratio=s/noise
fastsc=0.6022
slowsc=0.0645 

smooth=pow(efratio*fastsc+slowsc, 2)
ama=nz(ama[1], close)+smooth*(src-nz(ama[1], close))
filter=filterp/100 * stdev(ama-nz(ama), lengthAMA)
amalow=ama < nz(ama[1]) ? ama : nz(amalow[1])
amahigh=ama > nz(ama[1]) ? ama : nz(amahigh[1])
bw=(ama-amalow) > filter ? 1 : (amahigh-ama > filter ? -1 : 0)
s_color=bw > 0 ? colorBuy : (bw < 0) ? colorSell : colorBlue

amaLongConditionEntry = s_color==colorBuy and s_color[1]!=colorBuy
amaShortConditionEntry = s_color==colorSell and s_color[1]!=colorSell

//***********************Rahul Mohindar Oscillator ******************************//
C=close
cm2(x) => sma(x,2)
ma1=cm2(C)
ma2=cm2(ma1)
ma3=cm2(ma2)
ma4=cm2(ma3)
ma5=cm2(ma4)
ma6=cm2(ma5)
ma7=cm2(ma6)
ma8=cm2(ma7)
ma9=cm2(ma8)
ma10=cm2(ma9)
SwingTrd1 = 100 * (close - (ma1+ma2+ma3+ma4+ma5+ma6+ma7+ma8+ma9+ma10)/10)/(highest(C,10)-lowest(C,10))
SwingTrd2=ema(SwingTrd1,30)
SwingTrd3=ema(SwingTrd2,30)
RMO= ema(SwingTrd1,81)
Buy=cross(SwingTrd2,SwingTrd3)
Sell=cross(SwingTrd3,SwingTrd2)
Bull_Trend=ema(SwingTrd1,81)>0
Bear_Trend=ema(SwingTrd1,81)<0
Ribbon_kol=Bull_Trend ? colorBuy : (Bear_Trend ? colorSell : colorBlue)
Impulse_UP= SwingTrd2 > 0
Impulse_Down= RMO < 0
bar_kol=Impulse_UP ? colorBuy : (Impulse_Down ? colorSell : (Bull_Trend ?  colorBuy : colorBlue))

rahulMohindarOscilllatorLongEntry = Ribbon_kol==colorBuy and Ribbon_kol[1]!=colorBuy and Ribbon_kol[1]==colorSell and bar_kol==colorBuy
rahulMohindarOscilllatorShortEntry = Ribbon_kol==colorSell and Ribbon_kol[1]!=colorSell and Ribbon_kol[1]==colorBuy and bar_kol==colorSell

//***********************TD Sequential code ******************************//
transp=0
Numbers=false 
SR=false
Barcolor=true

TD = close > close[4] ?nz(TD[1])+1:0
TS = close < close[4] ?nz(TS[1])+1:0

TDUp = TD - valuewhen(TD < TD[1], TD , 1 )
TDDn = TS - valuewhen(TS < TS[1], TS , 1 )

priceflip = barssince(close<close[4])
sellsetup = close>close[4] and priceflip
sell = sellsetup and barssince(priceflip!=9)
sellovershoot = sellsetup and barssince(priceflip!=13)
sellovershoot1 = sellsetup and barssince(priceflip!=14)
sellovershoot2 = sellsetup and barssince(priceflip!=15)
sellovershoot3 = sellsetup and barssince(priceflip!=16)

priceflip1 = barssince(close>close[4])
buysetup = close<close[4] and priceflip1
buy = buysetup and barssince(priceflip1!=9)
buyovershoot = barssince(priceflip1!=13) and buysetup
buyovershoot1 = barssince(priceflip1!=14) and buysetup
buyovershoot2 = barssince(priceflip1!=15) and buysetup
buyovershoot3 = barssince(priceflip1!=16) and buysetup

TDbuyh = valuewhen(buy,high,0)
TDbuyl = valuewhen(buy,low,0)
TDsellh = valuewhen(sell,high,0)
TDselll = valuewhen(sell,low,0)
//***********************Volume Flow Indicator [LazyBear] ******************************//
lengthVFI = 130 
coefVFI = 0.2 
vcoefVFI = 2.5 
signalLength= 5 
smoothVFI=true 

ma(x,y) => smoothVFI ? sma(x,y) : x

typical=hlc3
inter = log( typical ) - log( typical[1] )
vinter = stdev(inter, 30 )
cutoff = coefVFI * vinter * close
vave = sma( volume, lengthVFI )[1]
vmax = vave * vcoefVFI
vc = iff(volume < vmax, volume, vmax)
mf = typical - typical[1]
vcp = iff( mf > cutoff, vc, iff ( mf < -cutoff, -vc, 0 ) )

vfi = ma(sum( vcp , lengthVFI )/vave, 3)
vfima=ema( vfi, signalLength )
dVFI=vfi-vfima

bullishVFI = vfi > 0 and vfi[1] <=0
bearishVFI =  vfi < 0 and vfi[1] >=0

//***********************WaveTrend Oscillator [WT] ******************************//
n1 = 10
n2 = 21
obLevel1 = 60
obLevel2 = 53
osLevel1 = -60
osLevel2 = -53
 
ap = hlc3 
esa = ema(ap, n1)
dWTI = ema(abs(ap - esa), n1)
ci = (ap - esa) / (0.015 * dWTI)
tci = ema(ci, n2)
 
wt1 = tci
wt2 = sma(wt1,4)

wtiSignal = wt1-wt2

bullishWTI = wt1 > osLevel1 and wt1[1] <= osLevel1 and wtiSignal > 0
bearishWTI = wt1 < obLevel1 and wt1[1] >= obLevel1 and wtiSignal < 0

// **************** Trend Magic code adapted from  Glaz ********************* /
CCI = 20 // input(20)
ATR = 5 // input(5)
Multiplier=1 // input(1,title='ATR Multiplier')
original=true // input(true,title='original coloring')
thisCCI = cci(close, CCI)
lastCCI = nz(thisCCI[1])
bufferDn= high + Multiplier * sma(tr,ATR)
bufferUp= low - Multiplier * sma(tr,ATR)
if (thisCCI >= 0 and lastCCI < 0) 
    bufferUp := bufferDn[1]
if (thisCCI <= 0 and lastCCI > 0) 
    bufferDn := bufferUp[1]

if (thisCCI >= 0)
    if (bufferUp < bufferUp[1])
        bufferUp := bufferUp[1]
else
    if (thisCCI <= 0)
        if (bufferDn > bufferDn[1])
            bufferDn := bufferDn[1]

x=thisCCI >= 0 ?bufferUp:thisCCI <= 0 ?bufferDn:x[1]
swap=x>x[1]?1:x<x[1]?-1:swap[1]
swap2=swap==1?lime:red
swap3=thisCCI >=0 ?lime:red
swap4=original?swap3:swap2

bullTrendMagic = swap4 == lime and swap4[1] == red
bearTrendMagic = swap4 == red and swap4[1] == lime

//********** Indicator: Support/Resistance based on COG Fib by Lazy Bear ****************
lengthFibCOG = input(20, "Support/Resistance Period based on COG Fib")

MA_s = 0.0
calc_wima(src, lengthFibCOG) => 
    MA_s=(src + nz(MA_s[1] * (lengthFibCOG-1)))/lengthFibCOG
    MA_s

calc_ma(s, l) => sma(s,l)

medianFibCOG=0
th=linreg(high, lengthFibCOG, medianFibCOG)
tl=linreg(low, lengthFibCOG, medianFibCOG)
tr_c=th-tl
tra= calc_wima(tr_c,lengthFibCOG)

mp=calc_ma( close, lengthFibCOG)
ub_4p2360 = mp + ( 4.2360 * tra)
ub_3p6180=mp  + ( 3.6180 * tra)
ub_2p6180=mp  + ( 2.6180 * tra)
ub_1p6180=mp  + ( 1.6180 * tra)
ub_0p618=mp  + ( 0.618 * tra)

lb_1p6180=mp - ( 1.6180 * tra)
lb_2p6180=mp - ( 2.6180 * tra)
lb_3p6180=mp - ( 3.6180 * tra)
lb_4p2360=mp - ( 4.2360 * tra)
lb_0p618=mp - ( 0.618 * tra)

cogFibTransparency = showFibCOG ? 0 : 100

plot(mp, title="S/R Middlepoint", color=green, transp=cogFibTransparency)
plot(lb_0p618,title="S1", color=teal, transp=cogFibTransparency)
plot(ub_0p618,title="R1", color=teal, transp=cogFibTransparency)
plot(ub_1p6180,title="R2", color=red, transp=cogFibTransparency)
plot(lb_1p6180,title="S2", color=red, transp=cogFibTransparency)
plot(ub_2p6180,title="R3", color=aqua, transp=cogFibTransparency)
plot(lb_2p6180,title="S3", color=aqua, transp=cogFibTransparency)
plot(ub_3p6180,title="R4", color=navy, transp=cogFibTransparency)
plot(lb_3p6180,title="S4", color=navy, transp=cogFibTransparency)
plot(ub_4p2360,title="R5", color=maroon, transp=cogFibTransparency)
plot(lb_4p2360,title="S5", color=maroon, transp=cogFibTransparency)

// ************ Indicator: Custom COG channel by Lazy Bear **************** //
srcCOG = close
lengthCOG = 34
median=0
multCOG= 2.5 // input(2.5)
offset = 20 //input(20)

tr_custom() => 
    x1=high-low
    x2=abs(high-close[1])
    x3=abs(low-close[1])
    max(x1, max(x2,x3))
    
atr_custom(x,y) => 
    sma(x,y)
    
dev = (multCOG * stdev(srcCOG, lengthCOG))
basis=linreg(srcCOG, lengthCOG, median)
ul = (basis + dev)
ll = (basis - dev)
tr_v = tr_custom()
acustom=(2*atr_custom(tr_v, lengthCOG))
uls=basis+acustom
lls=basis-acustom

cRFT = cogRegionFillTransp ? 0 : 100

// Plot STDEV channel
plot(basis, linewidth=2, color=navy, title="Median : STDEV COG", transp=cRFT)
lb=plot(ul, color=red, linewidth=2, title="BB+ : COG", style=dashed, transp=cRFT)
tb=plot(ll, color=green, linewidth=2, title="BB- : COG ", style=dashed, transp=cRFT)
// fill(tb,lb, silver, title="Region fill: STDEV COG",  transp=cRFT)

// Plot ATR channel
plot(basis, linewidth=2, color=navy,  linewidth=2, title="Median : ATR COG ", transp=cRFT)
ls=plot(uls, color=red, linewidth=2, title="Starc+ : ATR COG", style=circles, transp=cRFT)
ts=plot(lls, color=green, linewidth=2, title="Star- : ATR COG", style=circles, transp=cRFT)
// fill(ts,tb, green, title="Region fill : ATR COG", transp=cRFT)
// fill(ls,lb, red, title="Region fill : ATR COG", transp=cRFT)

// Mark SQZ
plot_offs_high=0.002 
plot_offs_low=0.002 
sqz_f=(uls>ul) and (lls<ll) 
b_color=sqz_f ? colorBlack : na 
plot(sqz_f ? lls - (lls * plot_offs_low) : na, color=b_color, style=cross, linewidth=3, title="SQZ : COG", transp=0) 
plot(sqz_f ? uls + (uls * plot_offs_high) : na, color=b_color, style=cross, linewidth=3, title="SQZ : COG", transp=0)

// ****************************************All the plots and coloring of bars***************************************************************
// Trend Magic
plotchar(tm and bullTrendMagic, title="TM", char=upSign, location=location.belowbar, color=colorBuy, transp=0, text="TM", textcolor=colorBuy, size=size.auto)
plotchar(tm and bearTrendMagic, title="TM", char=downSign, location=location.abovebar, color=colorSell, transp=0, text="TM", textcolor=colorSell, size=size.auto)

// WaveTrend Oscillator
plotshape(wtoLB and bullishWTI, color=colorBuy, style=shape.labelup, textcolor=#000000, text="WTI", location=location.belowbar, transp=0)
plotshape(wtoLB and bearishWTI, color=colorSell, style=shape.labeldown, textcolor=#ffffff,  text="WTI", location=location.abovebar, transp=0)

// VFI
plotshape(vfiLB and bullishVFI, color=colorBuy, style=shape.labelup, textcolor=#000000, text="VFI", location=location.belowbar, transp=0)
plotshape(vfiLB and bearishVFI, color=colorSell, style=shape.labeldown, textcolor=#ffffff,  text="VFI", location=location.abovebar, transp=0)

// PSAR
plotshape(inputIndividualSiganlPlot and sp and bullishPSAR, color=colorBuy, style=shape.labelup, textcolor=#000000, text="Sar", location=location.belowbar, transp=0)
plotshape(inputIndividualSiganlPlot and sp and bearishPSAR, color=colorSell, style=shape.labeldown, textcolor=#ffffff,  text="Sar", location=location.abovebar, transp=0)

// Leledec
plotshape(inputIndividualSiganlPlot and sL and leledecMajorBearish, color=colorSell, style=shape.labeldown, textcolor=#ffffff,  text="Leledec", location=location.abovebar, transp=0)
plotshape(inputIndividualSiganlPlot and sL and leledecMajorBullish, color=colorBuy, style=shape.labelup, textcolor=#000000, text="Leledec", location=location.belowbar, transp=0)

plotshape(min ? (minor==1?low:na) : na, style=shape.diamond, text="Leledec", size=size.tiny, location=location.belowbar, title="Weak Bullish Signals - Leledec", color=colorLime)
plotshape(min ? (minor==-1?high:na) : na, style=shape.diamond, text="Leledec", size=size.tiny, location=location.abovebar, title="Weak Bearish Signals - Leleded", color=colorSell)

// Ichimoku
plot(tenkan, color=iff(sCloud, colorTenkanViolet, na), title="Tenkan", linewidth=2, transp=0)
plot(kijun, color=iff(sCloud, colorKijun, na), title="Kijun", linewidth=2, transp=0)

plot(close, offset = -displacement, color=iff(sCloud, colorLime, na), title="Chikou", linewidth=1)
p1 = plot(senkouA, offset=displacement, color=lime, title="Senkou A", linewidth=1, transp=0)
p2 = plot(senkouB, offset=displacement, color=colorSell, title="Senkou B", linewidth=1, transp=0)
fill(p1, p2, color = senkouA > senkouB ? #1eb600 : colorSell, title="Kumo")  

plotshape(inputIndividualSiganlPlot and strongBearishSignal, color=colorSell, style=shape.labelup, textcolor=#000000,  text="Ichimoku", location=location.abovebar, transp=0)
plotshape(inputIndividualSiganlPlot and strongBullishSignal, color=colorBuy, style=shape.labeldown, textcolor=#ffffff,  text="Ichimoku", location=location.belowbar, transp=0)

plotshape(inputNeutralMinorSignals and neutralBullishSignal, style=shape.flag, text="Ichimoku", size=size.small, location=location.belowbar, title="Neutral Bullish Signals - Ichimoku", color=colorLime)
plotshape(inputNeutralMinorSignals and weakBullishSignal, style=shape.diamond, text="Ichimoku", size=size.tiny, location=location.belowbar, title="Weak Bullish Signals - Ichimoku", color=colorLime)

plotshape(inputNeutralMinorSignals and neutralBearishSignal, style=shape.flag, text="Ichimoku", size=size.small, location=location.abovebar, title="Neutral Bearish Signals - Ichimoku", color=colorMaroon)
plotshape(inputNeutralMinorSignals and weakBearishSignal, style=shape.diamond, text="Ichimoku", size=size.tiny, location=location.abovebar, title="Weak Bearish Signals - Ichimoku", color=colorMaroon)

// AMA
plotshape(inputIndividualSiganlPlot and inputAma and amaLongConditionEntry, color=colorBuy, style=shape.labelup, textcolor=#000000, text="AMA", location=location.belowbar, transp=0)
plotshape(inputIndividualSiganlPlot and inputAma and amaShortConditionEntry, color=colorSell, style=shape.labeldown, textcolor=#ffffff,  text="AMA", location=location.abovebar, transp=0)

// RMO
plotshape(inputIndividualSiganlPlot and sRMO and rahulMohindarOscilllatorLongEntry, color=colorBuy, style=shape.labelup, textcolor=#000000, text="RMO", location=location.belowbar, transp=0)
plotshape(inputIndividualSiganlPlot and sRMO and rahulMohindarOscilllatorShortEntry, color=colorSell, style=shape.labeldown, textcolor=#ffffff,  text="RMO", location=location.abovebar, transp=0)

// TD
plot(sTD and SR?(TDbuyh ? TDbuyl: na):na,style=circles, linewidth=1, color=red)
plot(sTD and SR?(TDselll ? TDsellh : na):na,style=circles, linewidth=1, color=lime)

barColour = sell? tdSell : buy? tdBuy : sellovershoot? tdSellOvershoot : sellovershoot1? tdSellOvershoot1 : sellovershoot2?tdSellOverShoot2 : sellovershoot3? tdSellOverShoot3 : buyovershoot? tdBuyOverShoot : buyovershoot1? tdBuyOvershoot1 : buyovershoot2? tdBuyOverShoot2 : buyovershoot3? tdBuyOvershoot3 : na
barcolor(color=barColour, title ="TD Sequential Bar Colour")

// ESMA
srcESMA=input(hl2, title="Ehlers' Cyber Cycle Source") 
a=input(.07, title="Ehlers' Cyber Cycle Alpha")
co=input(8.0, title="Ehlers' Cyber Cycle Cutoff")

pi=4*atan(1.0), dtr=pi/180.0, rtd=1/dtr
sESMA = (srcESMA + 2*srcESMA[1] + 2*srcESMA[2] + srcESMA[3])/6.0
c = nz(((1 - 0.5*a)*(1 - 0.5*a)*(sESMA - 2*nz(sESMA[1]) + nz(sESMA[2])) + 2*(1-a)*nz(c[1]) - (1 - a)*(1-a)*nz(c[2])), (srcESMA - 2*srcESMA[1] + srcESMA[2])/4.0)
q1 = (.0962*c + 0.5769*nz(c[2]) - 0.5769*nz(c[4]) - .0962*nz(c[6]))*(0.5+.08*nz(ip[1]))
I1 = nz(c[3])
dp_ = iff(q1 != 0 and q1[1] != 0, (I1/q1 - nz(I1[1])/nz(q1[1])) / (1 + I1*nz(I1[1])/(q1*nz(q1[1]))),0)
dp = iff(dp_ < 0.1, 0.1, iff(dp_ > 1.1, 1.1, dp_))
med(x,y,z) => (x+y+z) - min(x,min(y,z)) - max(x,max(y,z))
md = med(dp,dp[1], med(dp[2], dp[3], dp[4]))
//dc = iff(md == 0, 15, 6.28318 / md + 0.5)
dc = iff(md == 0, 15, 2*pi / md + 0.5)
ip = .33*dc + .67*nz(ip[1])
p = .15*ip + .85*nz(p[1])
pr=round(abs(p-1))
vx0=0
vx1=pr==1?(srcESMA - srcESMA[1]):vx0
vx2=pr==2?(srcESMA - srcESMA[2]):vx1
vx3=pr==3?(srcESMA - srcESMA[3]):vx2
vx4=pr==4?(srcESMA - srcESMA[4]):vx3
vx5=pr==5?(srcESMA - srcESMA[5]):vx4
vx6=pr==6?(srcESMA - srcESMA[6]):vx5
vx7=pr==7?(srcESMA - srcESMA[7]):vx6
vx8=pr==8?(srcESMA - srcESMA[8]):vx7
vx9=pr==9?(srcESMA - srcESMA[9]):vx8
vx10=pr==10?(srcESMA - srcESMA[10]):vx9
vx11=pr==11?(srcESMA - srcESMA[11]):vx10
vx12=pr==12?(srcESMA - srcESMA[12]):vx11
vx13=pr==13?(srcESMA - srcESMA[13]):vx12
vx14=pr==14?(srcESMA - srcESMA[14]):vx13
vx15=pr==15?(srcESMA - srcESMA[15]):vx14
vx16=pr==16?(srcESMA - srcESMA[16]):vx15
vx17=pr==17?(srcESMA - srcESMA[17]):vx16
vx18=pr==18?(srcESMA - srcESMA[18]):vx17
vx19=pr==19?(srcESMA - srcESMA[19]):vx18
vx20=pr==20?(srcESMA - srcESMA[20]):vx19
vx21=pr==21?(srcESMA - srcESMA[21]):vx20
vx22=pr==22?(srcESMA - srcESMA[22]):vx21
vx23=pr==23?(srcESMA - srcESMA[23]):vx22
vx24=pr==24?(srcESMA - srcESMA[24]):vx23
vx25=pr==25?(srcESMA - srcESMA[25]):vx24
vx26=pr==26?(srcESMA - srcESMA[26]):vx25
vx27=pr==27?(srcESMA - srcESMA[27]):vx26
vx28=pr==28?(srcESMA - srcESMA[28]):vx27
vx29=pr==29?(srcESMA - srcESMA[29]):vx28
vx30=pr==30?(srcESMA - srcESMA[30]):vx29
vx31=pr==31?(srcESMA - srcESMA[31]):vx30
vx32=pr==32?(srcESMA - srcESMA[32]):vx31
vx33=pr==33?(srcESMA - srcESMA[33]):vx32
vx34=pr==34?(srcESMA - srcESMA[34]):vx33
vx35=pr==35?(srcESMA - srcESMA[35]):vx34
vx36=pr==36?(srcESMA - srcESMA[36]):vx35
vx37=pr==37?(srcESMA - srcESMA[37]):vx36
vx38=pr==38?(srcESMA - srcESMA[38]):vx37
vx39=pr==39?(srcESMA - srcESMA[39]):vx38
vx40=pr==40?(srcESMA - srcESMA[40]):vx39
vx41=pr==41?(srcESMA - srcESMA[41]):vx40
vx42=pr==42?(srcESMA - srcESMA[42]):vx41
vx43=pr==43?(srcESMA - srcESMA[43]):vx42
vx44=pr==44?(srcESMA - srcESMA[44]):vx43
vx45=pr==45?(srcESMA - srcESMA[45]):vx44
vx46=pr==46?(srcESMA - srcESMA[46]):vx45
vx47=pr==47?(srcESMA - srcESMA[47]):vx46
vx48=pr==48?(srcESMA - srcESMA[48]):vx47
vx49=pr==49?(srcESMA - srcESMA[49]):vx48
vx50=pr==50?(srcESMA - srcESMA[50]):vx49
vx51=pr==51?(srcESMA - srcESMA[51]):vx50
vx52=pr==52?(srcESMA - srcESMA[52]):vx51
vx53=pr==53?(srcESMA - srcESMA[53]):vx52
vx54=pr==54?(srcESMA - srcESMA[54]):vx53
vx55=pr==55?(srcESMA - srcESMA[55]):vx54
vx56=pr==56?(srcESMA - srcESMA[56]):vx55
vx57=pr==57?(srcESMA - srcESMA[57]):vx56
vx58=pr==58?(srcESMA - srcESMA[58]):vx57
vx59=pr==59?(srcESMA - srcESMA[59]):vx58
vx60=pr==60?(srcESMA - srcESMA[60]):vx59
vx61=pr==61?(srcESMA - srcESMA[61]):vx60
vx62=pr==62?(srcESMA - srcESMA[62]):vx61
vx63=pr==63?(srcESMA - srcESMA[63]):vx62
vx64=pr==64?(srcESMA - srcESMA[64]):vx63
vx65=pr==65?(srcESMA - srcESMA[65]):vx64
vx66=pr==66?(srcESMA - srcESMA[66]):vx65
vx67=pr==67?(srcESMA - srcESMA[67]):vx66
vx68=pr==68?(srcESMA - srcESMA[68]):vx67
vx69=pr==69?(srcESMA - srcESMA[69]):vx68
vx70=pr==70?(srcESMA - srcESMA[70]):vx69
vx71=pr==71?(srcESMA - srcESMA[71]):vx70
vx72=pr==72?(srcESMA - srcESMA[72]):vx71
vx73=pr==73?(srcESMA - srcESMA[73]):vx72
vx74=pr==74?(srcESMA - srcESMA[74]):vx73
vx75=pr==75?(srcESMA - srcESMA[75]):vx74
v1=vx75
a1=exp(-pi/co)
b1=2.0*a1*cos((1.738*180/co)*dtr)
c1=a1*a1
coef2=b1+c1
coef3= -(c1+b1*c1)
coef4=c1*c1
coef1=1-coef2-coef3-coef4
f3=nz(coef1*v1+coef2*nz(f3[1])+coef3*nz(f3[2])+coef4*nz(f3[3]), v1)

ebc=true // input(true, title="Enable bar colors")
bc=ebc?( f3>0 ? f3 > nz(f3[1]) ? lime : green : f3<f3[1] ? red : orange ):na

// ****************************************BUY/SELL Signal ***************************************************************
// If any of the underlying indicators (  Leledec Majir, Parabolic SAR, Ichimoku, AKaufman AMA wave, Rahul Mondar Oscillator, or Volume Flow Indicator) turns bullish, then show Buy
// bull = (f3 > nz(f3[1]) and f3 > 0) or (leledecMajorBullish or bullishPSAR or strongBullishSignal or rahulMohindarOscilllatorLongEntry or bullishVFI)
// If any of the underlying indicators ( Leledec Majir, Parabolic SAR, Ichimoku, AKaufman AMA wave, Rahul Mondar Oscillator, or Volume Flow Indicator) turns bearish, then show Buy
// bear = (f3 < f3[1] and f3 < 0) or (leledecMajorBearish or bearishPSAR or strongBearishSignal or rahulMohindarOscilllatorShortEntry or bearishVFI)

// If any of the underlying indicators (  Leledec Majir, Parabolic SAR, Ichimoku, AKaufman AMA wave, Rahul Mondar Oscillator, or Volume Flow Indicator) turns bullish, then show Buy
// bull = leledecMajorBullish or bullishPSAR or strongBullishSignal or rahulMohindarOscilllatorLongEntry or bullishVFI
// If any of the underlying indicators ( Leledec Majir, Parabolic SAR, Ichimoku, AKaufman AMA wave, Rahul Mondar Oscillator, or Volume Flow Indicator) turns bearish, then show Buy
// bear = leledecMajorBearish or bearishPSAR or strongBearishSignal or rahulMohindarOscilllatorShortEntry or bearishVFI

bull = leledecMajorBullish or bullishPSAR or strongBullishSignal or rahulMohindarOscilllatorLongEntry or bullishVFI or amaLongConditionEntry or bullTrendMagic or bullishWTI
bear = leledecMajorBearish or bearishPSAR or strongBearishSignal or rahulMohindarOscilllatorShortEntry or bearishVFI or amaShortConditionEntry or bearTrendMagic or bearishWTI

if bull
    persistent_bull := 1 
    persistent_bear := 0
    
if bear
    persistent_bull := 0
    persistent_bear := 1

plotshape(buySellSignal and bull and persistent_bull[1] != 1, style=shape.labelup, location=location.belowbar, color=colorBuy, text="Buy", textcolor=#000000, transp=0)
plotshape(buySellSignal and bear and persistent_bear[1] != 1, style=shape.labeldown, color=colorSell, text="Sell", location=location.abovebar, textcolor =#ffffff, transp=0)
// ****************************************Alerts***************************************************************
// For WaveTrend Oscillator
alertcondition(bullishWTI, title='Bullish - WaveTrend Oscillator', message='Bullish - WaveTrend Oscillator')
alertcondition(bearishWTI, title='Bearish - WaveTrend Oscillator', message='Bearish - WaveTrend Oscillator')

// For Volume Flow Indicator
alertcondition(bullishVFI, title='Bullish - Volume Flow Indicator', message='Bullish - Volume Flow Indicator')
alertcondition(bearishVFI, title='Bearish - Volume Flow Indicator', message='Bearish - Volume Flow Indicator')

// For major Leledc Exhausion
alertcondition(leledecMajorBullish, title='Bullish - Leledec Exhausion', message='Bullish - Leledec Exhausion')
alertcondition(leledecMajorBearish, title='Bearish - Leledec Exhausion', message='Bearish - Leledec Exhausion')

// For Kaufman AMA wave
alertcondition(amaLongConditionEntry, title='Bullish - Kaufman AMA wave', message='Bullish - AMA ::  Kaufman AMA wave')
alertcondition(amaShortConditionEntry, title='Bearish - Kaufman AMA wave', message='Bearish - AMA :: Kaufman AMA wave')

// For Rahul Mohindar Oscillator
alertcondition(rahulMohindarOscilllatorLongEntry, title='Bullish - Rahul Mohindar Oscillator', message='Bullish - RMO :: Rahul Mohindar Oscillator')
alertcondition(rahulMohindarOscilllatorShortEntry, title='Bearish - Rahul Mohindar Oscillator', message='Bearish - RMO :: Rahul Mohindar Oscillator')

// For Parabolic Sar
alertcondition(bullishPSAR, title='Bullish - Sar :: Parabolic SAR', message='Bullish - Sar :: Parabolic SAR')
alertcondition(bearishPSAR, title='Bearish - Sar :: Parabolic SAR', message='Bearish - Sar :: Parabolic SAR')

// For Ichimoku
alertcondition(strongBullishSignal, title='Bullish - Ichimoku', message='Bullish - Ichimoku')
alertcondition(strongBearishSignal, title='Bearish - Ichimoku', message='Bearish - Ichimoku')

// For global buy/sell
alertcondition(bull and persistent_bull[1] != 1, title='Buy', message='Buy')
alertcondition(bear and persistent_bear[1] != 1, title='Sell', message='Sell')

// I build these indicators for myself and provide them as it is to improve upon,
// as I believe the best way to learn is together.
// Please add a Like and add me on Twitter (https://twitter.com/Joy_Bangla_1979). 

// If you have any concerns, comments or any issues with this indicator, please add your comments below. 
// Pleae do not forget to leave me a comment on how you find the indicator publicly on twitter and here on Trading view so that others can also benefit from your reviews.

// Description:
// The indicator shows buy or sell signal on certain criteria. I use it on 4 hour timeframe and 1 day timeframe only for Bitcoin.
// I have started using this on other coins as well with mixed results.
// TD Sequential is shown as coloured bars. Sell signals from this indicator is shown as red or variation of red. 
// Buy signal from this indicator is shown with a green coloured bar or variation of green.
// I am always displaying the Kumo cloud. 
// I have also added abilities to show as well as alert on several indicators - Ichimoku Tenkan, Kijun, Leledec Exhausion, Rahum Mohindar Oscillator, Kaufman AMA, Trend Magic, Volume Flow indicator
// On lower timeframes (less than 4 hours, it gives poor to mixed results)
// From the settings, you may turn on the dynamic support (S) and resistance (r) lines. I found that once the price moves above and closes above the middlepoint, it tends to go to resistance 2.
// Similar, once the price moves and cloes below the middlepoint, the price tends to reach the support 2 (S2). As these lines are dynamic, hence, the values change with each bar.
// Also, I find that in normal low-volatile times, once price reach either r2 or s2, it tends to move in opposite direction for the middlepoint. It tends to repeat these several times until the middle point is breached for other direction.
// Now, this does not hold always. Hence, take this with a grain of salt.
// Also I notice that at times, when price reach BB- COG or BB+ COG, it moved in opposite direction very violently. Some people might call it scam wick. Again, this does not always happen.
// This indicator is not 100% accurate. 
// If I only consider the buy or sell on close of the bar, then there is no issue with repainting. However, if I consider it during bar events, there is a chance of repeating. Please consider that!
// Do realize, I am not great with trading. And, hence, please use this with caution.
// Faq:
// Q: Does this indicator repaint?
// Answe: Most, if not all, indicators will repaint to some extent until the current bar is closed.
// On bar close, whatever it said will NOT repaint.
// During the bar, it is constantly getting live and making decision. Hence, either Buy/Sell signal on currently running bar may show up and dissapear.
// One way to get around it is to trade only on bar close. However, that means, one may lose potential safer and good point of entry.
// I won't fix this unless someone can find a better solution.
// Q: What other potential issues are there?
// Answer: Check the bug tracking on the Bitbucket. Link: https://bitbucket.org/long_live_prosper/indicators/issues?status=new&sort=-priority

//Disclaimer:
//  No Investment Advice Provided 
//  Any opinions, chats, messages, news, research, analyses, prices, or other information contained here are provided as general information for educational and entertainment purposes only and do not constitute investment advice. My bullshit statements should not be relied upon as a substitute for extensive independent market research before making your actual trading decisions. Opinions, market data, recommendations or any other content is subject to change at any time without notice. I will not accept liability for any loss or damage, including without limitation any loss of profit, which may arise directly or indirectly from use of or reliance on such information. 
//  I do not recommend the use of technical analysis or any analysis as a sole means of trading decisions. I do not recommend making hurried trading decisions. I have no clue about PAST PERFORMANCE or any INDICATIVE FUTURE RESULTS.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.